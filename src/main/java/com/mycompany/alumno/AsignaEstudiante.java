/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.alumno;

import com.mycompany.alumno.Alumno;
import com.mycompany.curso.Curso;
import com.mycompany.funciones.ReglaAsignaciones;
import com.mycompany.loginpro.Administrador;
import com.mycompany.loginpro.LoginPro;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author leo-progra
 */
public class AsignaEstudiante extends javax.swing.JFrame {

    /**
     * Creates new form AsignaEstudiante
     */
    
    ArrayList<Alumno> listaAlumnos = LoginPro.alumnos;
    ArrayList<Curso> listaCursos   = LoginPro.cursos;
    
    public AsignaEstudiante() {
        initComponents();
        this.setTitle("Asignar alumno a curso");
        llenarAlumnos();
    }
    
    public void llenarAlumnos(){
        jCEstudiante.removeAllItems();
        int row=1;
        for (Alumno alumno : listaAlumnos) {
            jCEstudiante.addItem(alumno.carne+" - "+alumno.nombre+" "+row);
            row++;
        }
    }
    
    public void llenarCursos(){
        if (jCEstudiante.getItemCount() > 0) {
            System.out.println("ESTUDIANTE ACTUAL "+jCEstudiante.getSelectedItem().toString());
            jCCurso.removeAllItems();
            String carne = jCEstudiante.getSelectedItem().toString().split("-")[0].trim();
            for (Curso curso : listaCursos) {
                boolean enCurso = false;
                for (Alumno al : curso.alumnosCurso) {
                    if (al.carne.equals(carne)) {
                        System.out.println("El alumno "+al.carne+" esta en el curso "+curso.nombre+" "+curso.idCurso);
                        enCurso = true;
                        break;
                    }
                }
                if (!enCurso) {
                    jCCurso.addItem(curso.idCurso+" - "+curso.nombre);
                }
            }
        }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCEstudiante = new javax.swing.JComboBox<>();
        jCCurso = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jCEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCEstudianteActionPerformed(evt);
            }
        });

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Asignar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Estudiante: *");

        jLabel2.setText("Curso: *");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jCCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                                .addComponent(jCEstudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCEstudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Administrador admin = new Administrador();
        admin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public String AsignarEstudianteACurso(String carne, int idCurso){
        Alumno alumnoSeleccionado = null;
        Curso  cursoSeleccionado  = null;
        String respuesta = "";
        for (Curso curso : LoginPro.cursos) {
            if (curso.idCurso == idCurso) {
                cursoSeleccionado = curso;
                break;
            }
        }
        for (Alumno alumno : LoginPro.alumnos) {
            if (alumno.carne.equals(carne)) {
                alumnoSeleccionado = alumno;
                break;
            }
        }
        if (alumnoSeleccionado != null && cursoSeleccionado != null) {
            ReglaAsignaciones reglas = new ReglaAsignaciones();
            if (reglas.cantidadDeAlumnosEnCurso(idCurso) ) {
                if (reglas.reglaAlumnoCarne(carne)) {
                    Alumno na = new Alumno();
                    na.nombre = alumnoSeleccionado.nombre;
                    na.apellido = alumnoSeleccionado.apellido;
                    na.carne = alumnoSeleccionado.carne;
                    na.nota = 0;
                    cursoSeleccionado.setAlumnoCurso(na);
                    respuesta = "Alumno con carne "+carne+" asignado exitosamente ";
                }else{ 
                    respuesta = "El alumno "+alumnoSeleccionado.carne+" excedio el limite de 5 cursos";
                }
            }else{
                respuesta =  "El curso "+cursoSeleccionado.idCurso+" - "+cursoSeleccionado.nombre +" se encuentra lleno";
            }
        }else{
            respuesta = "No se encontro informacion";
        }
        return respuesta;
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
        if (jCCurso.getItemCount()>0 && jCEstudiante.getItemCount()>0) {
            int validacionAsigancion = JOptionPane.showConfirmDialog(null, "Esta seguro que desea asignar el curso "
                    +jCCurso.getSelectedItem().toString()+" al estudiante "+jCEstudiante.getSelectedItem().toString());
            if(validacionAsigancion == JOptionPane.YES_OPTION){
                int idCurso = Integer.parseInt(jCCurso.getSelectedItem().toString().split("-")[0].trim());
                String carne = jCEstudiante.getSelectedItem().toString().split("-")[0].trim();
                String respuesta = AsignarEstudianteACurso(carne, idCurso);
                JOptionPane.showMessageDialog(this,respuesta);
                jCCurso.removeAllItems();
                llenarAlumnos();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Debe elegir un curso y un estudiante", "Error en la asignacion", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCEstudianteActionPerformed
        llenarCursos();
    }//GEN-LAST:event_jCEstudianteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jCCurso;
    private javax.swing.JComboBox<String> jCEstudiante;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
