/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.loginpro;

import com.mycompany.alumno.Alumno;
import com.mycompany.alumno.AsignaEstudiante;
import com.mycompany.alumno.CargaAlumnoXML;
import com.mycompany.alumno.ConsultaAlumnos;
import com.mycompany.profesor.ConsultaProfesor;
import com.mycompany.profesor.EdicionProfesor;
import com.mycompany.profesor.CreaProfesor;
import com.mycompany.curso.CrearCurso;
import com.mycompany.curso.EdicionCursos;
import com.mycompany.alumno.EdicionAlumnos;
import com.mycompany.alumno.CrearAlumno;
import com.mycompany.curso.CargaMasivaAsignacionAlumnos;
import com.mycompany.curso.CargaMasivaCursosJson;
import com.mycompany.curso.Curso;
import com.mycompany.funciones.ValidacionPassword;
import com.mycompany.profesor.CargaMasivaProfesor;
import com.mycompany.profesor.Profesor;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;


/**
 *
 * @author leo-progra
 */
public class Administrador extends javax.swing.JFrame {

    /**
     * Creates new form Administrador
     */
    public Administrador() {
        initComponents();
        //CargaAlumnoXML();
        this.setTitle("Menu de administrador");
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        JMIProfesores = new javax.swing.JMenu();
        JMICreaprofesor = new javax.swing.JMenuItem();
        JMIConsultap = new javax.swing.JMenuItem();
        jMIConsultaProfesores = new javax.swing.JMenuItem();
        JMICargamp = new javax.swing.JMenuItem();
        JMIGeneraCSVp = new javax.swing.JMenuItem();
        JMIAlumnos = new javax.swing.JMenu();
        JMICrea = new javax.swing.JMenuItem();
        JMIConsultaa = new javax.swing.JMenuItem();
        JMIEdiciona = new javax.swing.JMenuItem();
        jMICargaMasivaXml = new javax.swing.JMenuItem();
        JMIGeneraxmla = new javax.swing.JMenuItem();
        JMICursos = new javax.swing.JMenu();
        JMICreac = new javax.swing.JMenuItem();
        JMIConsultac = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        JMIAsginaalumno = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        JMICargamc = new javax.swing.JMenuItem();
        JMIAsginacionma = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setText("Nombre: Leonardo David Castanaza Cartagena");

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Cerrar sesion");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        JMIProfesores.setText("Profesores");
        JMIProfesores.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                JMIProfesoresMenuSelected(evt);
            }
        });
        JMIProfesores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIProfesoresActionPerformed(evt);
            }
        });

        JMICreaprofesor.setText("Crea Profesor");
        JMICreaprofesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMICreaprofesorActionPerformed(evt);
            }
        });
        JMIProfesores.add(JMICreaprofesor);

        JMIConsultap.setText("Consulta Profesor");
        JMIConsultap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIConsultapActionPerformed(evt);
            }
        });
        JMIProfesores.add(JMIConsultap);

        jMIConsultaProfesores.setText("Editar Profesor");
        jMIConsultaProfesores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIConsultaProfesoresActionPerformed(evt);
            }
        });
        JMIProfesores.add(jMIConsultaProfesores);

        JMICargamp.setText("Carga Masiva Profesores");
        JMICargamp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMICargampActionPerformed(evt);
            }
        });
        JMIProfesores.add(JMICargamp);

        JMIGeneraCSVp.setText("Generar CSV Profesores");
        JMIGeneraCSVp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIGeneraCSVpActionPerformed(evt);
            }
        });
        JMIProfesores.add(JMIGeneraCSVp);

        jMenuBar1.add(JMIProfesores);

        JMIAlumnos.setText("Alumnos");
        JMIAlumnos.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                JMIAlumnosMenuSelected(evt);
            }
        });
        JMIAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIAlumnosActionPerformed(evt);
            }
        });

        JMICrea.setText("Crea Alumno");
        JMICrea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMICreaActionPerformed(evt);
            }
        });
        JMIAlumnos.add(JMICrea);

        JMIConsultaa.setText("Consulta Alumnos");
        JMIConsultaa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIConsultaaActionPerformed(evt);
            }
        });
        JMIAlumnos.add(JMIConsultaa);

        JMIEdiciona.setText("Edici√≥n Alumnos");
        JMIEdiciona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIEdicionaActionPerformed(evt);
            }
        });
        JMIAlumnos.add(JMIEdiciona);

        jMICargaMasivaXml.setText("Carga Masiva XML");
        jMICargaMasivaXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICargaMasivaXmlActionPerformed(evt);
            }
        });
        JMIAlumnos.add(jMICargaMasivaXml);

        JMIGeneraxmla.setText("Generar XML Alumnos");
        JMIGeneraxmla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIGeneraxmlaActionPerformed(evt);
            }
        });
        JMIAlumnos.add(JMIGeneraxmla);

        jMenuBar1.add(JMIAlumnos);

        JMICursos.setText("Cursos");

        JMICreac.setText("Crea Curso");
        JMICreac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMICreacActionPerformed(evt);
            }
        });
        JMICursos.add(JMICreac);

        JMIConsultac.setText("Consulta Curso");
        JMIConsultac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIConsultacActionPerformed(evt);
            }
        });
        JMICursos.add(JMIConsultac);

        jMenuItem2.setText("Lista de Cursos/Modifica Cursos");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        JMICursos.add(jMenuItem2);

        JMIAsginaalumno.setText("Asigna alumno a Curso");
        JMIAsginaalumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIAsginaalumnoActionPerformed(evt);
            }
        });
        JMICursos.add(JMIAsginaalumno);

        jMenuItem3.setText("Carga masiva # de asignaciones");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        JMICursos.add(jMenuItem3);

        JMICargamc.setText("Carga Masiva Cursos .JSON");
        JMICargamc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMICargamcActionPerformed(evt);
            }
        });
        JMICursos.add(JMICargamc);

        JMIAsginacionma.setText("Exportar cursos");
        JMIAsginacionma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIAsginacionmaActionPerformed(evt);
            }
        });
        JMICursos.add(JMIAsginacionma);

        jMenuBar1.add(JMICursos);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(217, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(332, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JMIProfesoresMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_JMIProfesoresMenuSelected
        
    }//GEN-LAST:event_JMIProfesoresMenuSelected

    private void JMIConsultacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIConsultacActionPerformed
        //ConsultaCurso cc = new ConsultaCurso();
        //cc.setVisible(true);
        ConsultaEstCurso cec = new ConsultaEstCurso();
        cec.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JMIConsultacActionPerformed

    private void JMIAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIAlumnosActionPerformed

    }//GEN-LAST:event_JMIAlumnosActionPerformed

    private void JMIAlumnosMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_JMIAlumnosMenuSelected
        // TODO add your handling code here:
    }//GEN-LAST:event_JMIAlumnosMenuSelected

    private void JMIProfesoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIProfesoresActionPerformed

    }//GEN-LAST:event_JMIProfesoresActionPerformed

    private void JMIConsultapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIConsultapActionPerformed
        ConsultaProfesor consultaProfesor = new ConsultaProfesor();
        consultaProfesor.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JMIConsultapActionPerformed

    private void JMICreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMICreaActionPerformed
       CrearAlumno ca = new CrearAlumno();
       ca.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_JMICreaActionPerformed

    private void JMICreaprofesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMICreaprofesorActionPerformed
        CreaProfesor cp = new CreaProfesor();
        cp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JMICreaprofesorActionPerformed

    private void JMICreacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMICreacActionPerformed
        CrearCurso cc = new CrearCurso();
        cc.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JMICreacActionPerformed

    private void JMIAsginaalumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIAsginaalumnoActionPerformed
        AsignaEstudiante ae = new AsignaEstudiante();
        ae.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JMIAsginaalumnoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Login login = new Login();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMIConsultaProfesoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIConsultaProfesoresActionPerformed
        EdicionProfesor EdicionP = new EdicionProfesor();
        EdicionP.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMIConsultaProfesoresActionPerformed

    private void JMIConsultaaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIConsultaaActionPerformed
        ConsultaAlumnos ConsultaA = new ConsultaAlumnos();
        ConsultaA.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JMIConsultaaActionPerformed

    private void JMIEdicionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIEdicionaActionPerformed
        EdicionAlumnos EdicionA = new EdicionAlumnos();
        EdicionA.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JMIEdicionaActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        EdicionCursos ListC = new EdicionCursos();
        ListC.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void JMICargampActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMICargampActionPerformed
        CargaMasivaProfesor CargMProfesor = new CargaMasivaProfesor();
        CargMProfesor.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JMICargampActionPerformed

    private void JMIGeneraCSVpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIGeneraCSVpActionPerformed
        JFileChooser GuardarArchivo = new JFileChooser("");
        int ArchivoSeleccionado = GuardarArchivo.showDialog(this, "Guardar");
        if (ArchivoSeleccionado==JFileChooser.APPROVE_OPTION) {
            EscribirArchivoCSV(GuardarArchivo.getSelectedFile().toPath().toString());
        }
    }//GEN-LAST:event_JMIGeneraCSVpActionPerformed

    private void jMICargaMasivaXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICargaMasivaXmlActionPerformed
        CargaAlumnoXML CargaAlumnos = new CargaAlumnoXML();
        CargaAlumnos.setVisible(true);
        this.dispose();            
    }//GEN-LAST:event_jMICargaMasivaXmlActionPerformed
        
    private void JMIGeneraxmlaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIGeneraxmlaActionPerformed
        String ContenidoXml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n<alumnos>\n";
        
        for (Alumno a : LoginPro.alumnos) {
            ContenidoXml+="\t<alumno>\n";
            ContenidoXml+="\t\t<carne>";
            ContenidoXml+=a.carne;
            ContenidoXml+="</carne>\n";
            ContenidoXml+="\t\t<nombre>"; 
            ContenidoXml+=a.nombre;
            ContenidoXml+="</nombre>\n";
            ContenidoXml+="\t\t<apellido>";
            ContenidoXml+=a.apellido;
            ContenidoXml+="</apellido>\n";
            ContenidoXml+="\t\t<password>";
            ContenidoXml+=a.password;
            ContenidoXml+="</password>\n";
            ContenidoXml+="\t</alumno>\n";
        }
        ContenidoXml+="</alumnos>";
        
        JFileChooser GuardarArchivo = new JFileChooser("");
        int ArchivoSeleccionado = GuardarArchivo.showDialog(this, "Guardar");
        if (ArchivoSeleccionado==JFileChooser.APPROVE_OPTION) {
            EscribirArchivoXml(GuardarArchivo.getSelectedFile().toPath().toString(),ContenidoXml);
            JOptionPane.showMessageDialog(this, "Se exporto el archivo correctamente en:\n "
                    +GuardarArchivo.getSelectedFile().toPath().toString());
        }
        
    }    
        
    public void EscribirArchivoXml(String RutaConNombre, String Contenido){
        try {
            FileWriter fw = new FileWriter(RutaConNombre);
            PrintWriter pw = new PrintWriter(fw);
            pw.write(Contenido);
            pw.close();
            fw.close();
        }catch (Exception e) {
                e.printStackTrace();
        }
    }//GEN-LAST:event_JMIGeneraxmlaActionPerformed

    private void JMICargamcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMICargamcActionPerformed
        CargaMasivaCursosJson cmj = new CargaMasivaCursosJson();
        cmj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JMICargamcActionPerformed

    private void JMIAsginacionmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIAsginacionmaActionPerformed
        JFileChooser GuardarArchivo = new JFileChooser("");
        int ArchivoSeleccionado = GuardarArchivo.showDialog(this, "Guardar");
        if (ArchivoSeleccionado==JFileChooser.APPROVE_OPTION) {
            escribirJsonCursos(GuardarArchivo.getSelectedFile().getPath(), LoginPro.cursos);
            JOptionPane.showMessageDialog(this, "Se exporto el archivo correctamente en:\n "
                    +GuardarArchivo.getSelectedFile().toPath().toString());
        }
    }//GEN-LAST:event_JMIAsginacionmaActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        CargaMasivaAsignacionAlumnos cmaa = new CargaMasivaAsignacionAlumnos();
        cmaa.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    
    public static void escribirJsonCursos(String rutaConNombre, ArrayList<Curso> cursos) {
        JSONArray cursosArray = new JSONArray();

        for (Curso curso : cursos) {
            JSONObject jsonObject = new JSONObject();
            jsonObject.put("id", curso.idCurso);
            jsonObject.put("nombre", curso.nombre);
            jsonObject.put("seccion", curso.seccion);
            jsonObject.put("fecha_inicio", curso.fechaInicio);
            jsonObject.put("fecha_fin", curso.fechaFin);
            jsonObject.put("hora_inicio", curso.horaIncio);
            jsonObject.put("hora_fin", curso.horaFin);
            jsonObject.put("profesor", curso.nombreProfesor);
            
            JSONArray alumnosArray = new JSONArray();
            for (Alumno alumno : curso.alumnosCurso) {
                JSONObject alumnoJSON = new JSONObject();
                alumnoJSON.put("nombre", alumno.nombre);
                alumnoJSON.put("apellido", alumno.apellido);
                alumnoJSON.put("carne", alumno.carne);
                alumnoJSON.put("password", alumno.password);
                alumnoJSON.put("nota", alumno.nota);
                alumnosArray.add(alumnoJSON);
            }
            jsonObject.put("alumnosCurso", alumnosArray);
            cursosArray.add(jsonObject);
        }

        try {
            FileWriter file = new FileWriter(rutaConNombre);
            file.write(cursosArray.toJSONString());
            file.flush();
            file.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    
    
    public void EscribirArchivoCSV(String RutaConNombre){
        try {
            FileWriter fw = new FileWriter(RutaConNombre);
            PrintWriter pw = new PrintWriter(fw);
            String contenidoCSV = "";
            for (Profesor p : LoginPro.profesores) {
                contenidoCSV += p.usuario+","+p.nombre+","+p.apellido+","+p.password+"\n";
            }
            pw.write(contenidoCSV);
            pw.close();
            fw.close();
            JOptionPane.showMessageDialog(this, "Se exportaron "+LoginPro.profesores.size()+" profesor \n"
                    + "En la ruta; "+RutaConNombre);
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
                e.printStackTrace();
        }
    }
    
    public void LeerArchivoTextoAlumnos (String RutaConNombre) {
        ValidacionPassword vp = new ValidacionPassword();
        //ArrayList<String>
        try {
            File file = new File(RutaConNombre);
            FileReader fr = new FileReader(file);
            
            BufferedReader Br = new BufferedReader(fr);
            
            String linea;
            while ((linea=Br.readLine())!=null) {                
                String[] ContenidoLinea = linea.split(",");
                Alumno alumno = new Alumno();
                alumno.carne = String.valueOf(ContenidoLinea[0]);
                alumno.nombre = ContenidoLinea[1];
                alumno.apellido = ContenidoLinea[2];
                alumno.password = ContenidoLinea[3];
                if (vp.MenuValPass(alumno.password)) {
                    LoginPro.alumnos.add(alumno);
                }else{
                //JOptionPane
                }
            }
        //CargaAlumnoXML();
        }catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu JMIAlumnos;
    private javax.swing.JMenuItem JMIAsginaalumno;
    private javax.swing.JMenuItem JMIAsginacionma;
    private javax.swing.JMenuItem JMICargamc;
    private javax.swing.JMenuItem JMICargamp;
    private javax.swing.JMenuItem JMIConsultaa;
    private javax.swing.JMenuItem JMIConsultac;
    private javax.swing.JMenuItem JMIConsultap;
    private javax.swing.JMenuItem JMICrea;
    private javax.swing.JMenuItem JMICreac;
    private javax.swing.JMenuItem JMICreaprofesor;
    private javax.swing.JMenu JMICursos;
    private javax.swing.JMenuItem JMIEdiciona;
    private javax.swing.JMenuItem JMIGeneraCSVp;
    private javax.swing.JMenuItem JMIGeneraxmla;
    private javax.swing.JMenu JMIProfesores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMICargaMasivaXml;
    private javax.swing.JMenuItem jMIConsultaProfesores;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    // End of variables declaration//GEN-END:variables

}
